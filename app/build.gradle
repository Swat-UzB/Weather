plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.swat_uzb.weatherapp"
        minSdk 24
        targetSdk 33
        versionCode 8
        versionName "1.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "APP_ID_WEATHER_API", "\"${properties.getProperty("APP_ID_WEATHER_API")}\""

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    bundle {
        storeArchive {
            enable = false
        }
    }
    namespace 'com.swat_uzb.weatherapp'
}

dependencies {
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    ///////////////////////////////////Room////////////////////////////////////
    implementation("androidx.room:room-runtime:$room_version")
    implementation "androidx.room:room-ktx:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    ///////////////////////////////////Retrofit////////////////////////////////
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit2_coroutine_version"
    implementation "com.google.code.gson:gson:$retrofit_version"
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_version")
    //////////////////////////////////Lifecycle/////////////////////////////////
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    //////////////////////////////////Coroutines/////////////////////////////////////
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version ")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    /////////////////////////////////////Navigation////////////////////////////////////
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    ///////////////////////////////////////Dagger//////////////////////////////
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    /////////////////////////////////////WorkManager///////////////////////////////////
    implementation("androidx.work:work-runtime-ktx:$work_version")
    /////////////////////////////////////Preference/////////////////////////////////////
    implementation "androidx.preference:preference-ktx:$preference_version"
    /////////////////////////////////RecyclerView Animator///////////////////////////
    implementation "jp.wasabeef:recyclerview-animators:$recyc_anim_version"
    ///////////////////////////////////Firebase//////////////////////////////////////
    // Import the Firebase BoM
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    //dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    ////////////////////////////////////////Permissions/////////////////////////////////
    implementation "com.google.android.gms:play-services-location:$loc_service_version"
    ///////////////////////////////////////////Scroll effect////////////////////////////
    implementation "io.github.everythingme:overscroll-decor-android:$overscroll_version"
    ////////////////////////////////////////Lottie//////////////////////////////////////
    implementation "com.airbnb.android:lottie:$lottie_version"
}